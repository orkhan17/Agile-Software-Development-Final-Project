 <label for="PaymentType">Payment type:</label>
   <select name="PaymentType" id="PaymentType">
     <option value="0">Choose payment type</option>
     <option value="Hourly">Hourly payment</option>
     <option value="Real">Real time payment</option>
    </select>
 <%= form_for @changeset, Routes.zone_path(@conn, :update, @zone), fn zone -> %>


  <div class="form-group">
    <%= label zone, :start_date, class: "control-label" %>
    <%= text_input  zone, :start_date, class: "form-control startTime", placeholder: "HH:mm" %>
    <span class="errorLabel errorForstartTime"></span>
    <%= error_tag zone, :start_date %>
  </div>

  <div class="form-group">
    <%= label zone, :end_date, class: "control-label" %>
    <%= text_input  zone, :end_date, class: "form-control endTime", placeholder: "HH:mm" %>
    <span class="errorLabel errorForendTime"></span>
    <%= error_tag zone, :end_date %>
  </div>

  <div class="form-group">
      <label>Pay now</label>
      <input type="checkbox" id="pay" name="pay" value="paay">
  </div>


  <div class="form-group">
    <%= label zone, :zone_type, class: "control-label" %>
    <%= text_input  zone, :zone_type, class: "form-control" %>
    <%= error_tag zone, :zone_type %>
  </div>

  <div class="form-group">
    <%= label zone, :hourlyPrice, class: "control-label" %>
    <%= text_input  zone, :hourlyPrice, class: "form-control hourlyPrice" %>
    <%= error_tag zone, :hourlyPrice %>
  </div>

  <div class="form-group">
    <%= label zone, :realTimePrice, class: "control-label" %>
    <%= text_input  zone, :realTimePrice, class: "form-control" %>
    <%= error_tag zone, :realTimePrice %>
  </div>



  <div class="form-group">
    <%= submit "Submit", class: "btn btn-primary", id: "submit"%>
  </div>
<% end %>

<script>

let startTime = document.querySelector(".startTime");
let endTime = document.querySelector(".endTime");

let errorForstartTime = document.querySelector(".errorForstartTime");
let errorForendTime = document.querySelector(".errorForendTime");

let errorLabels = document.querySelectorAll(".errorLabel");
let inputs = document.querySelectorAll(".form-control");
let invalidfeedbacks = document.querySelectorAll(".invalid-feedback");

let submit = document.querySelector("#submit");
let myForm = document.querySelector("form");

myForm.style.display = "none"

let selectPayment = document.querySelector("#PaymentType");

let hourlyPrice = document.querySelector(".hourlyPrice").value

selectPayment.addEventListener('change',function(){
  myForm.style.display = "block"
  if(this.value == "Hourly"){
    alert("Hourly")
  }else if(this.value == "Real"){
    alert("Real")
  }else{
      myForm.style.display = "none"
  }

})

errorLabels.forEach(function (label) {
    label.style.color = "darkred";
    label.style.fontSize = "0.8em";
});

startTime.addEventListener('keyup', function (event) {
    var isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(this.value);

    if (!isValid) {
        errorForstartTime.innerText = "Must be correct form";
        this.style.marginBottom = "0";
    }else{
          errorForstartTime.innerText = "";
          this.style.marginBottom = "1em";
          if(this.value.length === 5 && endTime.value === 5){
                        alert("TimeDurationHour")

            var startTimeArr = this.value.split(":");
            var endimeArr = endTime.value.split(":");
            var TimeDurationHour = endimeArr[0]-startTimeArr[0]
            var TimeDurationMinute = endimeArr[1]-startTimeArr[1]
            alert(TimeDurationHour)
            alert(TimeDurationMinute)
          }
    }
})

endTime.addEventListener('keyup', function (event) {
    invalidfeedbacks.forEach(function (label) {
        label.innerText = ""
    });
    var isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(this.value);
    if (!isValid) {
        errorForendTime.innerText = "Must be correct form";
        this.style.marginBottom = "0";
    }else{
          errorForendTime.innerText = "";
          this.style.marginBottom = "1em";
    }
    if(isValid && this.value.length == 5 && startTime.value.length == 5){
            let startTimeArr = startTime.value.split(":");
            let endTimeArr = this.value.split(":");
            let TimeDurationHour = 0
            let TimeDurationMinute = 0
            let price = 0
            if(endTimeArr[0]- startTimeArr[0] == 1 && endTimeArr[1]- startTimeArr[1] < 0){
                TimeDurationHour = 0
                TimeDurationMinute = 60 + (endTimeArr[1]-startTimeArr[1])
                price = 1*hourlyPrice
                alert(TimeDurationHour)
                alert(TimeDurationMinute)
                alert(price + "euros")
            }else{
              TimeDurationHour = endTimeArr[0]-startTimeArr[0]
              TimeDurationMinute = endTimeArr[1]-startTimeArr[1]
              alert(TimeDurationHour)
              alert(TimeDurationMinute)
              price = (TimeDurationMinute != 0) ? TimeDurationHour*hourlyPrice + 1*hourlyPrice : TimeDurationHour*hourlyPrice
              alert(price + "euros")
            }
          }
})


inputs.forEach(function (input) {
    input.addEventListener("keyup", function () {
        for (var i = 0; i < errorLabels.length; i++) {
            if (errorLabels[i].innerText != "") {
                console.log("disabled")
                submit.disabled = true
                break
            }
            else {
                submit.disabled = false
            }
        }
    })
});

</script>
